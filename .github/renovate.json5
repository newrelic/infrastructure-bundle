{
  "extends": [
    "config:base",
    // Disable the creation of this issue that renovate updates with the pending issue we follow with Zenhub
    // https://github.com/newrelic/infrastructure-bundle/issues/97
    ":disableDependencyDashboard"
  ],
  // Label PRs with `dependencies`.
  "labels": ["dependencies"],
  // By default, assign the coreint team as reviewers.
  // PRs related to the infra agent will be assigned to CAOS as per a packageRule below. 
  "reviewers": ["team:coreint"],
  // RegexManagers will match patterns and extract dependencies from bundle.yaml.
  "regexManagers": [
    {
      // Extract base agent image from bundle.yml.
      "fileMatch": [
        "^bundle.yml$"
      ],
      "depNameTemplate": "newrelic/infrastructure", // Defined directly since we only capture the version in the regex.
      "datasourceTemplate": "docker",
      "matchStrings": [
        "agentVersion: (?<currentValue>[0-9.]+)"
      ]
    },
    {
      // Extract dependency name and version for integrations.
      "fileMatch": [
        "^bundle.yml$"
      ],
      // Dependency name (org/repo format) is created from the `integrationName` named capture group in the regex below.
      "depNameTemplate": "newrelic/{{{integrationName}}}",
      "datasourceTemplate": "github-releases", // Version info is fetched from GitHub.
      "matchStrings": [
        // Capture integration name (without `newrelic/`) and version from bundle.yaml.
        " *- name: (?<integrationName>.+)\n *version: (?<currentValue>.+)"
      ]
    }
  ],
  "packageRules": [
    {
      "matchUpdateTypes": ["minor", "patch"],
      // Exclude any dependencies which are pre-1.0.0 because those can make breaking changes at any time
      // according to the SemVer spec.
      "matchCurrentVersion": "!/^(0|v0)/",
      // Renovate will do the following when detecting a new dependency bump:
      // - If it's one of the exclusions it will create a PR (major, 0. or v0. and sarama)
      // - In case it matches one of the rest cases, it will create a branch that will be auto merged if tests pass.
      // - If in the previous step tests fail, a PR will be created instead of merging the branch.
      "automerge": true,
      "automergeType": "branch",
      "pruneBranchAfterAutomerge": true
    },
    {
      // Assign PRs related to the agent to the caos team.
      "matchPackageNames": [
        "newrelic/infrastructure"
      ],
      "reviewers": ["team:caos"]
    },
    {
      // NRJMX 1.6.x is known to be broken, so we skip 1.6.x.
      "matchPackageNames": [
        "newrelic/nrjmx"
      ],
      "allowedVersions": ">=1.7"
    },
    {
      // nri-ecs moved to newrelic/nri-ecs image since 1.4.0.
      "matchPackageNames": [
        "newrelic/nri-ecs"
      ],
      "allowedVersions": "<=1.3.1"
    }
  ]
}
